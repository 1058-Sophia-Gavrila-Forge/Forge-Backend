pipeline {
  agent any
  
  stages {
    stage('Setup') {
      steps {
        sh 'pwd'
        sh 'ls -al'
        sh 'chmod +x gradlew'
      }
    }
    
    stage('Test') {
      steps {
        withGradle {
          script{
            try {
              sh './gradlew build -x test --no-daemon'
              sh './gradlew test jacocoTestReport --no-daemon'
            } finally {
              echo 'junit call can go here'
            }
          } //script
        } //withGradle
      } //steps
    } //stage('Test')
    
    stage('Publish Test Coverage Report') {
      steps {
        step([$class: 'JacocoPublisher',
              execPattern: '**/build/jacoco/*.exec',
              classPattern: '**/build/classes',
              sourcePattern: 'src/main/java',
              exclusionPattern: 'src/test*'
              ])
      } //steps
    } //stage(...)
    
    stage('Record Coverage') {
        when { branch 'main' }
        steps {
            script {
                currentBuild.result = 'SUCCESS'
             }
            step([$class: 'MasterCoverageAction', jacocoCoverageCounter:'INSTRUCTION', publishResultAs: 'comment', scmVars: [GIT_URL: env.GIT_URL]])
        }
    }
    stage('PR Coverage to Github') {
        when { allOf {not { branch 'master' }; expression { return env.CHANGE_ID != null }} }
        steps {
            script {
                currentBuild.result = 'SUCCESS'
             }
            step([$class: 'CompareCoverageAction', jacocoCoverageCounter:'INSTRUCTION', publishResultAs: 'comment', scmVars: [GIT_URL: env.GIT_URL]])
        }
    }
    
    stage('Deploy Frontend-Dev') {
        when { branch 'fontend-dev' }
        steps {
            script {
                sh './gradlew clean bootRun --no-daemon'
            }
        }
    }
    
  } //stages
  post {
    always {
      emailext body: 'A Test EMail', 
               recipientProviders: [[$class: 'DevelopersRecipientProvider'], 
                                   [$class: 'RequesterRecipientProvider']], 
               subject: 'Test'
    }
  }
}
